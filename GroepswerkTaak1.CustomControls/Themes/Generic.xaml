<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:conv="clr-namespace:GroepswerkTaak1.CustomControls.Converters"
	xmlns:local="clr-namespace:GroepswerkTaak1.CustomControls">
	<!--  Style voor de knoppen van mijn portal  -->
	<Style TargetType="{x:Type local:clsPortalButton}">
		<Setter Property="Width" Value="100" />
		<Setter Property="Height" Value="100" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:clsPortalButton}">
					<Border
						x:Name="ButtonBorder"
						BorderBrush="#FF697d78"
						BorderThickness="1"
						CornerRadius="5">
						<Grid>
							<Grid>
								<Border x:Name="InsideButtonBorder" CornerRadius="4.5">
									<Border.Background>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
											<GradientStop Offset="0" Color="#FFb9bfbf" />
											<GradientStop Offset="0.5" Color="#FFb9bfbf" />
											<GradientStop Offset="0.5" Color="#FFa6afae" />
											<GradientStop Offset="1.0" Color="#FFa6afae" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
								<Border
									Height="49"
									VerticalAlignment="Bottom"
									CornerRadius="0,0,4.5,4.5">
									<Border.Background>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1.5">
											<GradientStop Offset="0.5" Color="#00FFFFFF" />
											<GradientStop Offset="1.0" Color="#60FFFFFF" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
							<Grid Margin="0">
								<TextBlock
									Margin="0,3,0,0"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"
									FontSize="12"
									Text="{TemplateBinding Content}" />
								<ContentPresenter
									Width="40"
									Height="40"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MainIcon}" />
								<ContentPresenter
									Width="16"
									Height="16"
									Margin="0,0,10,0"
									HorizontalAlignment="Right"
									VerticalAlignment="Bottom"
									Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIcon}" />
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="InsideButtonBorder" Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<GradientStop Offset="0" Color="AliceBlue" />
										<GradientStop Offset="0.5" Color="AliceBlue" />
										<GradientStop Offset="0.5" Color="LightBlue" />
										<GradientStop Offset="1.0" Color="LightBlue" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Black" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="ButtonBorder" Property="BorderThickness" Value="3" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style voor tabItem  -->
	<Style TargetType="{x:Type local:clsCustomTabItem}">
		<Setter Property="Background" Value="LightGray" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Padding" Value="8,0,5,1" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="MinHeight" Value="18" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="MinWidth" Value="50" />
		<Setter Property="Width" Value="auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:clsCustomTabItem">
					<Border
						Name="Border"
						Margin="2,0,2,0"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						CornerRadius="2,10,0,0">
						<StackPanel
							Margin="3"
							HorizontalAlignment="Right"
							Orientation="Horizontal">
							<ContentPresenter
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								ContentSource="Header" />
							<Button
								x:Name="btnCloseTab"
								Width="14"
								Height="14"
								Margin="10,0,0,0"
								Background="{TemplateBinding Background}"
								BorderBrush="Gray"
								BorderThickness="1"
								Content="X"
								FontSize="11"
								FontWeight="ExtraBold"
								Visibility="Hidden">
								<Button.Template>
									<ControlTemplate TargetType="Button">
										<Border
											x:Name="BorderInButton"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											CornerRadius="3">
											<ContentPresenter
												Margin="0,-2,0,0"
												HorizontalAlignment="Center"
												VerticalAlignment="Center" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="RenderTransform">
													<Setter.Value>
														<ScaleTransform ScaleX="1.05" ScaleY="1.05" />
													</Setter.Value>
												</Setter>

												<Setter TargetName="BorderInButton" Property="Effect">
													<Setter.Value>
														<DropShadowEffect
															BlurRadius="6"
															Opacity="0.6"
															ShadowDepth="3"
															Color="Black" />
													</Setter.Value>
												</Setter>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter TargetName="BorderInButton" Property="BorderBrush" Value="Black" />
												<Setter TargetName="BorderInButton" Property="Effect" Value="{x:Null}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
							</Button>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsCloseable" Value="True" />
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="Border.IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHighlighted}" />
							<Setter TargetName="btnCloseTab" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsCloseable" Value="True" />
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="Border.IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHighlighted}" />
							<Setter TargetName="btnCloseTab" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsCloseable" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHighlighted}" />
							<Setter TargetName="btnCloseTab" Property="Visibility" Value="Hidden" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="Border.IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
							<Setter TargetName="btnCloseTab" Property="Visibility" Value="Hidden" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsCloseable" Value="True" />
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="Border.IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
							<Setter TargetName="btnCloseTab" Property="Visibility" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:clsLoadingSpinner}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:clsLoadingSpinner}">
					<ControlTemplate.Resources>
						<conv:clsCalculationStrokeDashArrayConverter x:Key="CalculationStrokeDashArrayConverter" />
					</ControlTemplate.Resources>
					<Ellipse
						Width="{TemplateBinding Diameter}"
						Height="{TemplateBinding Diameter}"
						RenderTransformOrigin="0.5 0.5"
						Stroke="{TemplateBinding Color}"
						StrokeDashCap="Round"
						StrokeThickness="{TemplateBinding Thickness}">
						<Ellipse.StrokeDashArray>
							<MultiBinding Converter="{StaticResource CalculationStrokeDashArrayConverter}">
								<Binding Path="Diameter" RelativeSource="{RelativeSource TemplatedParent}" />
								<Binding Path="Thickness" RelativeSource="{RelativeSource TemplatedParent}" />
							</MultiBinding>
						</Ellipse.StrokeDashArray>
						<Ellipse.RenderTransform>
							<RotateTransform x:Name="Rotation" Angle="0" />
						</Ellipse.RenderTransform>
						<Ellipse.Triggers>
							<EventTrigger RoutedEvent="Loaded">
								<BeginStoryboard>
									<Storyboard RepeatBehavior="Forever">
										<DoubleAnimation
											Storyboard.TargetName="Rotation"
											Storyboard.TargetProperty="Angle"
											From="0"
											To="360"
											Duration="0:0:1" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Ellipse.Triggers>
					</Ellipse>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
